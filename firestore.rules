
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an administrator
    // This is more secure as it checks the verified email from the auth token
    function isAdmin() {
      return request.auth.token.email == 'sheikhhayyaan@gmail.com' && request.auth.token.email_verified;
    }
    
    // A user is authenticated if the request auth object is not null
    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // An authenticated user can read/write their own document
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      // An admin can read/write any user document
      allow read, write: if isAuthenticated() && isAdmin();
    }
    
    // Rules for the 'payments' collection
    match /payments/{paymentId} {
        // An admin can perform any action on any payment
        allow read, write: if isAuthenticated() && isAdmin();
        // An authenticated user can only read their own payments
        allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // Rules for the 'expenditures' collection
    match /expenditures/{expenditureId} {
        // Only admins can read and write expenditures
        allow read, write: if isAuthenticated() && isAdmin();
    }

    // Rules for the 'settings' collection
    match /settings/{docId} {
        // Only admins can read and write settings
        allow read, write: if isAuthenticated() && isAdmin();
    }
  }
}
